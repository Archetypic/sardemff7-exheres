# Copyright 2011 Quentin "Sardem FF7" Glidic <sardemff7@sardemff7.net>
# Distributed under the terms of the GNU General Public License v2
# Based in part upon
#     nss-9999.ebuild from Gentoo sardemff7 overlay, which is:
#         Copyright 1999-2011 Gentoo Foundation
# and
#     nss-3.12.10.exheres-0 from Exherbo desktop overlay, which is:
#         Copyright 2008 Ingmar Vanhassel <ingmar@exherbo.org>
#         Copyright 2009 Bo Ã˜rsted Andresen <zlin@exherbo.org>

require mozilla-scm flag-o-matic


SLOT="0"

HOMEPAGE="http://www.mozilla.org/projects/security/pki/nss/"

SUMMARY="Mozilla's Network Security Services library that implements PKI support"

PLATFORMS="~amd64 ~x86"

MYOPTIONS="
    debug
    utils [[ description = [ Install the included utilities, e. g. certutil for cert management ] ]]

    platform: amd64
"


WORK="${WORK}/security/nss/"

src_unpack() {
    scm_src_unpack
    edo cp \
        "${FILES}"/nss.pc.in \
        "${FILES}"/Makefile-pc \
        "${WORK}"
}

src_prepare() {
    ln -s Linux2.6.mk "${WORK}"/../coreconf/Linux3.0.mk
}

src_configure() {
    strip-flags

    # Respect LDFLAGS
    export DSO_LDOPTS="${LDFLAGS}"

    # Respect user AR
    edo sed -e "/^AR[ \t]*= ar cr/s:ar:${AR}:" -i ../coreconf/UNIX.mk

    option platform:amd64 && export USE_64=1

    export NSPR_INCLUDE_DIR=`nspr-config --includedir`
    export NSPR_LIB_DIR=`nspr-config --libdir`
    export BUILD_OPT=1
    export NSS_USE_SYSTEM_SQLITE=1
    export NSDISTMODE=copy
    export NSS_ENABLE_ECC=1
    export XCFLAGS="${CFLAGS}"
    export FREEBL_NO_DEPEND=1
}

src_compile() {
    emake -j1 \
        CC="${CC}" \
        CCC="${CXX}" \
        RANLIB="${RANLIB}" \
        NSDISTMODE=copy \
        NSS_ENABLE_ECC=1 \
        NSS_USE_SYSTEM_SQLITE=1 \
        OPTIMIZER="${CFLAGS}" \
        USE_SYSTEM_ZLIB=1 \
        ZLIB_LIBS=-lz \
        $(option !debug && echo BUILDOPT=1) \
        build_coreconf build_dbm all

    emake -f Makefile-pc LIBDIR="${LIBDIR}" nss.pc
}

src_install() {
    emake -f Makefile-pc DESTDIR="${IMAGE}" LIBDIR="${LIBDIR}" install_nss.pc

    dobin "${FILES}"/nss-config

    hereenvd 40nss <<EOF
LDPATH="/usr/${LIBDIR}/nss"
EOF

    edo cd ../../dist

    insinto /usr/${LIBDIR}/nss
    doins *.OBJ/lib/*.{chk,a}
    exeinto /usr/${LIBDIR}/nss
    doexe *.OBJ/lib/*.so

    insinto /usr/include/nss
    doins public/nss/*

    local nssutils
    if option utils ; then
        nssutils="addbuiltin atob baddbdir btoa certcgi certutil checkcert
        cmsutil conflict crlutil derdump digest makepqg mangle modutil multinit
        nonspr10 ocspclnt oidcalc p7content p7env p7sign p7verify pk11mode
        pk12util pp rsaperf selfserv shlibsign signtool signver ssltap strsclnt
        symkeyutil tstclnt vfychain vfyserv"
    fi
    edo cd */bin
    for file in ${nssutils}; do
        dobin ${file}
    done
}
